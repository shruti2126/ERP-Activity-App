// vite.config.ts
import path from "path";
import { defineConfig } from "file:///opt/bitnami/erpnext/frappe-bench/apps/activity/frontend/node_modules/vite/dist/node/index.js";
import react from "file:///opt/bitnami/erpnext/frappe-bench/apps/activity/frontend/node_modules/@vitejs/plugin-react/dist/index.mjs";

// ../../../sites/common_site_config.json
var common_site_config_default = {
  allow_cors: "*",
  background_workers: 1,
  default_site: "erpnext",
  developer_mode: 1,
  file_watcher_port: 6787,
  frappe_user: "daemon",
  gunicorn_workers: 17,
  ignore_csrf: true,
  live_reload: true,
  rebase_on_pull: false,
  redis_cache: "redis://localhost:13000",
  redis_queue: "redis://localhost:11000",
  redis_socketio: "redis://localhost:13000",
  restart_supervisor_on_update: true,
  restart_systemd_on_update: false,
  serve_default_site: true,
  server_script_enabled: true,
  shallow_clone: true,
  socketio_port: "9000",
  use_redis_auth: false,
  webserver_port: 5e3
};

// proxyOptions.ts
var { webserver_port } = common_site_config_default;
var proxyOptions_default = {
  "^/(app|api|assets|files|private)": {
    target: `http://127.0.0.1:${webserver_port}`,
    ws: true,
    router: function(req) {
      const site_name = req.headers.host.split(":")[0];
      return `http://${site_name}:${webserver_port}`;
    }
  }
};

// vite.config.ts
var __vite_injected_original_dirname = "/opt/bitnami/erpnext/frappe-bench/apps/activity/frontend";
var vite_config_default = defineConfig({
  plugins: [react()],
  server: {
    port: 8080,
    proxy: proxyOptions_default
  },
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "src")
    }
  },
  build: {
    outDir: "../activity/public/frontend",
    emptyOutDir: true,
    target: "es2015"
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAiLi4vLi4vLi4vc2l0ZXMvY29tbW9uX3NpdGVfY29uZmlnLmpzb24iLCAicHJveHlPcHRpb25zLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL29wdC9iaXRuYW1pL2VycG5leHQvZnJhcHBlLWJlbmNoL2FwcHMvYWN0aXZpdHkvZnJvbnRlbmRcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9vcHQvYml0bmFtaS9lcnBuZXh0L2ZyYXBwZS1iZW5jaC9hcHBzL2FjdGl2aXR5L2Zyb250ZW5kL3ZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9vcHQvYml0bmFtaS9lcnBuZXh0L2ZyYXBwZS1iZW5jaC9hcHBzL2FjdGl2aXR5L2Zyb250ZW5kL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCI7XG5pbXBvcnQgcmVhY3QgZnJvbSBcIkB2aXRlanMvcGx1Z2luLXJlYWN0XCI7XG5pbXBvcnQgcHJveHlPcHRpb25zIGZyb20gXCIuL3Byb3h5T3B0aW9uc1wiO1xuXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgcGx1Z2luczogW3JlYWN0KCldLFxuICBzZXJ2ZXI6IHtcbiAgICBwb3J0OiA4MDgwLFxuICAgIHByb3h5OiBwcm94eU9wdGlvbnMsXG4gIH0sXG4gIHJlc29sdmU6IHtcbiAgICBhbGlhczoge1xuICAgICAgXCJAXCI6IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsIFwic3JjXCIpLFxuICAgIH0sXG4gIH0sXG4gIGJ1aWxkOiB7XG4gICAgb3V0RGlyOiBcIi4uL2FjdGl2aXR5L3B1YmxpYy9mcm9udGVuZFwiLFxuICAgIGVtcHR5T3V0RGlyOiB0cnVlLFxuICAgIHRhcmdldDogXCJlczIwMTVcIixcbiAgfSxcbn0pO1xuIiwgIntcbiBcImFsbG93X2NvcnNcIjogXCIqXCIsXG4gXCJiYWNrZ3JvdW5kX3dvcmtlcnNcIjogMSxcbiBcImRlZmF1bHRfc2l0ZVwiOiBcImVycG5leHRcIixcbiBcImRldmVsb3Blcl9tb2RlXCI6IDEsXG4gXCJmaWxlX3dhdGNoZXJfcG9ydFwiOiA2Nzg3LFxuIFwiZnJhcHBlX3VzZXJcIjogXCJkYWVtb25cIixcbiBcImd1bmljb3JuX3dvcmtlcnNcIjogMTcsXG4gXCJpZ25vcmVfY3NyZlwiOiB0cnVlLFxuIFwibGl2ZV9yZWxvYWRcIjogdHJ1ZSxcbiBcInJlYmFzZV9vbl9wdWxsXCI6IGZhbHNlLFxuIFwicmVkaXNfY2FjaGVcIjogXCJyZWRpczovL2xvY2FsaG9zdDoxMzAwMFwiLFxuIFwicmVkaXNfcXVldWVcIjogXCJyZWRpczovL2xvY2FsaG9zdDoxMTAwMFwiLFxuIFwicmVkaXNfc29ja2V0aW9cIjogXCJyZWRpczovL2xvY2FsaG9zdDoxMzAwMFwiLFxuIFwicmVzdGFydF9zdXBlcnZpc29yX29uX3VwZGF0ZVwiOiB0cnVlLFxuIFwicmVzdGFydF9zeXN0ZW1kX29uX3VwZGF0ZVwiOiBmYWxzZSxcbiBcInNlcnZlX2RlZmF1bHRfc2l0ZVwiOiB0cnVlLFxuIFwic2VydmVyX3NjcmlwdF9lbmFibGVkXCI6IHRydWUsXG4gXCJzaGFsbG93X2Nsb25lXCI6IHRydWUsXG4gXCJzb2NrZXRpb19wb3J0XCI6IFwiOTAwMFwiLFxuIFwidXNlX3JlZGlzX2F1dGhcIjogZmFsc2UsXG4gXCJ3ZWJzZXJ2ZXJfcG9ydFwiOiA1MDAwXG59IiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvb3B0L2JpdG5hbWkvZXJwbmV4dC9mcmFwcGUtYmVuY2gvYXBwcy9hY3Rpdml0eS9mcm9udGVuZFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL29wdC9iaXRuYW1pL2VycG5leHQvZnJhcHBlLWJlbmNoL2FwcHMvYWN0aXZpdHkvZnJvbnRlbmQvcHJveHlPcHRpb25zLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9vcHQvYml0bmFtaS9lcnBuZXh0L2ZyYXBwZS1iZW5jaC9hcHBzL2FjdGl2aXR5L2Zyb250ZW5kL3Byb3h5T3B0aW9ucy50c1wiO2ltcG9ydCBjb21tb25fc2l0ZV9jb25maWcgZnJvbSBcIi4uLy4uLy4uL3NpdGVzL2NvbW1vbl9zaXRlX2NvbmZpZy5qc29uXCI7XG5jb25zdCB7IHdlYnNlcnZlcl9wb3J0IH0gPSBjb21tb25fc2l0ZV9jb25maWc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgXCJeLyhhcHB8YXBpfGFzc2V0c3xmaWxlc3xwcml2YXRlKVwiOiB7XG4gICAgdGFyZ2V0OiBgaHR0cDovLzEyNy4wLjAuMToke3dlYnNlcnZlcl9wb3J0fWAsXG4gICAgd3M6IHRydWUsXG4gICAgcm91dGVyOiBmdW5jdGlvbiAocmVxOiB7IGhlYWRlcnM6IHsgaG9zdDogc3RyaW5nIH0gfSkge1xuICAgICAgY29uc3Qgc2l0ZV9uYW1lID0gcmVxLmhlYWRlcnMuaG9zdC5zcGxpdChcIjpcIilbMF07XG4gICAgICByZXR1cm4gYGh0dHA6Ly8ke3NpdGVfbmFtZX06JHt3ZWJzZXJ2ZXJfcG9ydH1gO1xuICAgIH0sXG4gIH0sXG59O1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUEwVixPQUFPLFVBQVU7QUFDM1csU0FBUyxvQkFBb0I7QUFDN0IsT0FBTyxXQUFXOzs7QUNGbEI7QUFBQSxFQUNDLFlBQWM7QUFBQSxFQUNkLG9CQUFzQjtBQUFBLEVBQ3RCLGNBQWdCO0FBQUEsRUFDaEIsZ0JBQWtCO0FBQUEsRUFDbEIsbUJBQXFCO0FBQUEsRUFDckIsYUFBZTtBQUFBLEVBQ2Ysa0JBQW9CO0FBQUEsRUFDcEIsYUFBZTtBQUFBLEVBQ2YsYUFBZTtBQUFBLEVBQ2YsZ0JBQWtCO0FBQUEsRUFDbEIsYUFBZTtBQUFBLEVBQ2YsYUFBZTtBQUFBLEVBQ2YsZ0JBQWtCO0FBQUEsRUFDbEIsOEJBQWdDO0FBQUEsRUFDaEMsMkJBQTZCO0FBQUEsRUFDN0Isb0JBQXNCO0FBQUEsRUFDdEIsdUJBQXlCO0FBQUEsRUFDekIsZUFBaUI7QUFBQSxFQUNqQixlQUFpQjtBQUFBLEVBQ2pCLGdCQUFrQjtBQUFBLEVBQ2xCLGdCQUFrQjtBQUNuQjs7O0FDckJBLElBQU0sRUFBRSxlQUFlLElBQUk7QUFFM0IsSUFBTyx1QkFBUTtBQUFBLEVBQ2Isb0NBQW9DO0FBQUEsSUFDbEMsUUFBUSxvQkFBb0IsY0FBYztBQUFBLElBQzFDLElBQUk7QUFBQSxJQUNKLFFBQVEsU0FBVSxLQUFvQztBQUNwRCxZQUFNLFlBQVksSUFBSSxRQUFRLEtBQUssTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUMvQyxhQUFPLFVBQVUsU0FBUyxJQUFJLGNBQWM7QUFBQSxJQUM5QztBQUFBLEVBQ0Y7QUFDRjs7O0FGWkEsSUFBTSxtQ0FBbUM7QUFNekMsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUyxDQUFDLE1BQU0sQ0FBQztBQUFBLEVBQ2pCLFFBQVE7QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLE9BQU87QUFBQSxFQUNUO0FBQUEsRUFDQSxTQUFTO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxLQUFLO0FBQUEsSUFDcEM7QUFBQSxFQUNGO0FBQUEsRUFDQSxPQUFPO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixhQUFhO0FBQUEsSUFDYixRQUFRO0FBQUEsRUFDVjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
